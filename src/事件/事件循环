事件循环：
JS的执行流程
JS引擎等待任务，执行任务，进入休眠状态无限循环

引擎执行任务时永远不会进行渲染，如果任务执行需要很长一段时间也没关系。仅在任务完成后才会绘制对DOM的更改

每个宏任务之后，引擎会立即执行微任务队列中的所有任务，然后再执行其他的宏任务，或渲染，或进行其他任何操作

code -> promise -> timeout

setTimeout(() => alert("timeout"));

Promise.resolve()
  .then(() => alert("promise"));

alert("code");

微任务会在执行任何其他事件处理，或渲染，或执行任何其他宏任务之前完成
（确保微任务之间的应用程序环境基本相同，比如：没有新的网络数据）

（没用过）
如果我们想要异步执行一个函数，但是要在更改渲染或新事件被处理之前执行，可以使用后queuueMicrotask来进行安排


